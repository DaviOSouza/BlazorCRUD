@page "/ProdutosListar"
@using Shared.Models
@inject HttpClient httpClient

<h3 class="text-center">Lista de Produtos</h3>

<div class="p-3 shadow d-flex justify-content-center">
    <label class="p-2">
        Procure pelo nome do produto:
        <input class="form-control" @bind-value="palavra" />
    </label>
    <button class="btn btn-primary" @onclick="Carregar">Filtrar</button>
</div>

<div class="text-center p-3">
    <table class="table">
        <tr>
            <td class="border p-1">#</td>
            <td class="border p-1">Nome</td>
            <td class="border p-1">Preço</td>
            <td class="border p-1">Quantidade</td>
            <td class="border p-1">Imagem</td>
        </tr>
        @foreach (Produto p in produtos)
        {
            <tr>
                <td class="border p-1">@p.Id</td>
                <td class="border p-1">@p.Nome</td>
                <td class="border p-1">@p.Preco</td>
                <td class="border p-1">@p.Quantidade</td>
                <td class="border p-1"><img src="@p.Imagem" alt="Imagem do Produto" class="w-25" /></td>
            </tr>
        }
    </table>
</div>

<div class="text-center p-3 text-danger">
    @msg
</div>

@code {
    private List<Produto>? produtos = new();
    private string msg = "";
    private string palavra = "";

    protected async Task Carregar()
    {
        string api = "api/produtos/listar";
        if (!string.IsNullOrEmpty(palavra))
        {
            api = $"api/produtos/listar?nome={palavra}";
        }

        var response = await httpClient.GetAsync(api);

        if (response.IsSuccessStatusCode)
        {
            produtos = await response.Content.ReadFromJsonAsync<List<Produto>>();
        }
        else
        {
            msg = await response.Content.ReadAsStringAsync();
        }

    }

    protected override async Task OnInitializedAsync()
    {
        await Carregar();
    }
}
